<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Transit Planner: src/Clock.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Transit Planner
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">An experiment on transfer patterns robustness</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">src/Clock.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright 2012 Eugen Sawin &lt;sawine@me73.com&gt;</span>
<a name="l00002"></a>00002 <span class="preprocessor">#ifndef SRC_CLOCK_H_</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span><span class="preprocessor">#define SRC_CLOCK_H_</span>
<a name="l00004"></a>00004 <span class="preprocessor"></span>
<a name="l00005"></a>00005 <span class="preprocessor">#include &lt;cstdint&gt;</span>
<a name="l00006"></a>00006 <span class="preprocessor">#include &lt;ctime&gt;</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#include &lt;sstream&gt;</span>
<a name="l00009"></a>00009 
<a name="l00010"></a>00010 <span class="keyword">namespace </span>base {
<a name="l00011"></a>00011 
<a name="l00012"></a><a class="code" href="classbase_1_1Clock.html">00012</a> <span class="keyword">class </span><a class="code" href="classbase_1_1Clock.html">Clock</a> {
<a name="l00013"></a>00013  <span class="keyword">public</span>:
<a name="l00014"></a>00014   <span class="keyword">typedef</span> int64_t Diff;
<a name="l00015"></a>00015 
<a name="l00016"></a>00016   <span class="keyword">enum</span> Type {
<a name="l00017"></a>00017     kProcessClock = CLOCK_PROCESS_CPUTIME_ID,
<a name="l00018"></a>00018     kThreadClock = CLOCK_THREAD_CPUTIME_ID
<a name="l00019"></a>00019   };
<a name="l00020"></a>00020 
<a name="l00021"></a>00021   <span class="keyword">static</span> <span class="keyword">const</span> Diff kSecInMin = 60;
<a name="l00022"></a>00022   <span class="keyword">static</span> <span class="keyword">const</span> Diff kMilliInSec = 1000;
<a name="l00023"></a>00023   <span class="keyword">static</span> <span class="keyword">const</span> Diff kMicroInMilli = 1000;
<a name="l00024"></a>00024   <span class="keyword">static</span> <span class="keyword">const</span> Diff kNanoInMicro = 1000;
<a name="l00025"></a>00025   <span class="keyword">static</span> <span class="keyword">const</span> Diff kMicroInSec = kMilliInSec * kMicroInMilli;
<a name="l00026"></a>00026   <span class="keyword">static</span> <span class="keyword">const</span> Diff kMicroInMin = kMicroInSec * kSecInMin;
<a name="l00027"></a>00027   <span class="keyword">static</span> constexpr <span class="keywordtype">double</span> kMilliInMicro = 1.0 / kMicroInMilli;
<a name="l00028"></a>00028   <span class="keyword">static</span> constexpr <span class="keywordtype">double</span> kMicroInNano = 1.0 / kNanoInMicro;
<a name="l00029"></a>00029   <span class="keyword">static</span> constexpr <span class="keywordtype">double</span> kSecInMicro = 1.0 / kMicroInSec;
<a name="l00030"></a>00030   <span class="keyword">static</span> constexpr <span class="keywordtype">double</span> kMinInMicro = 1.0 / kMicroInMin;
<a name="l00031"></a>00031 
<a name="l00032"></a>00032   <a class="code" href="classbase_1_1Clock.html">Clock</a>() {
<a name="l00033"></a>00033     clock_gettime(kProcessClock, &amp;time_);
<a name="l00034"></a>00034   }
<a name="l00035"></a>00035 
<a name="l00036"></a>00036   <span class="keyword">explicit</span> <a class="code" href="classbase_1_1Clock.html">Clock</a>(<span class="keyword">const</span> Type type) {
<a name="l00037"></a>00037     clock_gettime(type, &amp;time_);
<a name="l00038"></a>00038   }
<a name="l00039"></a>00039 
<a name="l00040"></a>00040   Diff operator-(<span class="keyword">const</span> <a class="code" href="classbase_1_1Clock.html">Clock</a>&amp; rhs)<span class="keyword"> const </span>{
<a name="l00041"></a>00041     <span class="keywordflow">return</span> (time_.tv_sec - rhs.time_.tv_sec) * kMicroInSec +
<a name="l00042"></a>00042            (time_.tv_nsec - rhs.time_.tv_nsec) * kMicroInNano;
<a name="l00043"></a>00043   }
<a name="l00044"></a>00044 
<a name="l00045"></a>00045   <span class="comment">// Returns the time duration between given times in microseconds.</span>
<a name="l00046"></a>00046   <span class="keyword">static</span> Diff Duration(<span class="keyword">const</span> <a class="code" href="classbase_1_1Clock.html">Clock</a>&amp; beg, <span class="keyword">const</span> <a class="code" href="classbase_1_1Clock.html">Clock</a>&amp; end) {
<a name="l00047"></a>00047     <span class="keywordflow">return</span> end - beg;
<a name="l00048"></a>00048   }
<a name="l00049"></a>00049 
<a name="l00050"></a>00050   <span class="comment">// Returns the string representation of the given time difference.</span>
<a name="l00051"></a>00051   <span class="keyword">static</span> std::string DiffStr(<span class="keyword">const</span> Diff&amp; diff) {
<a name="l00052"></a>00052     std::stringstream ss;
<a name="l00053"></a>00053     ss.setf(std::ios::fixed, std::ios::floatfield);
<a name="l00054"></a>00054     ss.precision(2);
<a name="l00055"></a>00055     <span class="keywordflow">if</span> (diff &gt;= kMicroInMin) {
<a name="l00056"></a>00056       <span class="keyword">const</span> <span class="keywordtype">double</span> min = diff * kMinInMicro;
<a name="l00057"></a>00057       ss &lt;&lt; min &lt;&lt; <span class="stringliteral">&quot;min&quot;</span>;
<a name="l00058"></a>00058     } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (diff &gt;= kMicroInSec) {
<a name="l00059"></a>00059       <span class="keyword">const</span> <span class="keywordtype">double</span> sec = diff * kSecInMicro;
<a name="l00060"></a>00060       ss &lt;&lt; sec &lt;&lt; <span class="stringliteral">&quot;s&quot;</span>;
<a name="l00061"></a>00061     } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (diff &gt;= kMicroInMilli) {
<a name="l00062"></a>00062       <span class="keyword">const</span> <span class="keywordtype">double</span> milli = diff * kMilliInMicro;
<a name="l00063"></a>00063       ss &lt;&lt; milli &lt;&lt; <span class="stringliteral">&quot;ms&quot;</span>;
<a name="l00064"></a>00064     } <span class="keywordflow">else</span> {
<a name="l00065"></a>00065       ss &lt;&lt; diff &lt;&lt; <span class="stringliteral">&quot;µs&quot;</span>;
<a name="l00066"></a>00066     }
<a name="l00067"></a>00067     <span class="keywordflow">return</span> ss.str();
<a name="l00068"></a>00068   }
<a name="l00069"></a>00069 
<a name="l00070"></a>00070   <span class="comment">// Returns the system time resolution.</span>
<a name="l00071"></a>00071   <span class="comment">// Remark: Usually returns 0µs (1ns), this is however a bad promise and does</span>
<a name="l00072"></a>00072   <span class="comment">// not reflect the (dynamic) underlying clock event resolution.</span>
<a name="l00073"></a>00073   <span class="keyword">static</span> Diff Resolution() {
<a name="l00074"></a>00074     timespec res;
<a name="l00075"></a>00075     clock_getres(CLOCK_MONOTONIC, &amp;res);
<a name="l00076"></a>00076     <span class="keywordflow">return</span> res.tv_sec * kMicroInSec + res.tv_nsec * kMicroInNano;
<a name="l00077"></a>00077   }
<a name="l00078"></a>00078 
<a name="l00079"></a>00079 
<a name="l00080"></a>00080  <span class="keyword">private</span>:
<a name="l00081"></a>00081   timespec time_;
<a name="l00082"></a>00082 };
<a name="l00083"></a>00083 
<a name="l00084"></a>00084 }  <span class="comment">// namespace base</span>
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 <span class="preprocessor">#endif  // SRC_CLOCK_H_</span>
<a name="l00087"></a>00087 <span class="preprocessor"></span>
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Sat Aug 4 2012 05:25:42 for Transit Planner by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
